---
import Navbar from "../components/navbar/Navbar.astro";
import "@fontsource/poppins/300.css";
import "@fontsource/poppins/400.css";
import "@fontsource/poppins/500.css";
import "@fontsource/poly";
import "../styles/global.css";
import Footer from "../components/Footer.astro";
import CirclePointer from "../components/CirclePointer.astro";
import { description, previewImage, title, url } from "../constants/consts";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta property="og:title" content={title} />
    <meta name="description" content={description} />

    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={previewImage} />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={previewImage} />

    <link rel="canonical" href={url} />
    <link rel="icon" href="/favicon.ico" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>Anna Hilla Â· Frontend Web Developer</title>
  </head>
  <body
    class="flex flex-col bg-beige font-poppins dark:bg-black/90 min-h-screen text-black dark:text-white"
  >
    <Navbar />
    <main class="flex-1">
      <slot />
    </main>
    <Footer />

    <CirclePointer />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll(".section-reveal");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target);
          }
        });
      },
      {
        threshold: 0.1,
      }
    );

    sections.forEach((section) => {
      observer.observe(section);
    });
  });
</script>
